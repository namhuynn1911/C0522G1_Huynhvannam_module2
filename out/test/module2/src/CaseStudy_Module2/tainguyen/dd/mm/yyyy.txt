private static boolean isLeapYear(int year) {
    boolean isDivisible4 = year % 4 == 0;
    boolean isDivisible100 = year % 100 == 0;
    boolean isDivisible400 = year % 400 == 0;

    return (isDivisible4 && !isDivisible100) || isDivisible400;
}

public static String getDateOfBirth() {
    String dateOfBirth;
    while (true) {
        try {
            System.out.print("Nhập ngày sinh: ");
            dateOfBirth = SCANNER.nextLine();
            if (!dateOfBirth.matches("(0[1-9]|[12]\\d|3[0-1])/(0[1-9]||1[0-2])/(19\\d{2}|20(0\\d|1[0-5]))")) {
                throw new DateFormatException("Vui lòng nhập đúng định dạng dd/mm/yyyy!");
            }

            String[] str = dateOfBirth.split("/");
            if (str[1].equals("04") || str[1].equals("06") || str[1].equals("09") || str[1].equals("11")) {
                if (Integer.parseInt(str[0]) > 30) {
                    throw new DaysOfMonthException("Vui lòng nhập đúng số ngày trong tháng (tháng này có tối đa 30 ngày)!");
                }
            } else if (str[1].equals("02")) {
                if (isLeapYear(Integer.parseInt(str[2]))) {
                    if (Integer.parseInt(str[0]) > 29) {
                        throw new DaysOfMonthException("Vui lòng nhập đúng số ngày trong tháng (tháng 2 có tối đa 29 ngày vì là năm nhuận)!");
                    }
                } else {
                    if (Integer.parseInt(str[0]) > 28) {
                        throw new DaysOfMonthException("Vui lòng nhập đúng số ngày trong tháng (tháng 2 có tối đa 28 ngày)!");
                    }
                }
            }

            return dateOfBirth;
        } catch (DateFormatException | DaysOfMonthException e) {
            System.out.println(e.getMessage());
        }
    }
}
white_check_mark
eyes
raised_hands












